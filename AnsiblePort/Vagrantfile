NUMBER_OF_WORKERS = ENV['NUMBER_OF_WORKERS'] = '2'
NUMBER_OF_WORKERS_TO_INT = NUMBER_OF_WORKERS.to_i
Vagrant.configure("2") do |config|
  config.vm.synced_folder ".", "/vagrant", type: "rsync"
  config.vm.box_check_update = false
  config.vm.provision "shell", inline: <<-SHELL
  # Install python on all machines
  yum module install -y python36 
  yum install -y epel-release && sudo yum install -y sshpass bash-completion
  # Create ansible local facts directory
  mkdir -p -v /etc/ansible/facts.d
  SHELL

  (1..NUMBER_OF_WORKERS_TO_INT).each do |i|
    config.vm.define "worker-#{i}" do |worker|
      worker.vm.box = "bento/centos-8"
      worker.vm.hostname = "worker-#{i}"
      worker.vm.network "private_network", ip: "172.42.42.10#{i}"
      # Uncomment these 2 lines after the first vagrant up
      
      #worker.ssh.host = "172.42.42.10#{i}"
      #worker.ssh.port = 22
      
      VAGRANT_MACHINE_IP = ENV['VAGRANT_MACHINE_IP'] = "172.42.42.10#{i}"
      # Create & attach a 5GiB disk to each node machine
      file_for_disk = "./large_disk#{i}.vdi"
      worker.vm.provider "virtualbox" do |v|
        # If the disk already exists don't create it
        unless File.exist?(file_for_disk)
            v.customize ['createhd', '--filename', file_for_disk, '--size', 5120]
        end
        v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_for_disk]
      end

      # Script for worker nodes 
      worker.vm.provision "shell", inline: <<-SHELL
      export NUMBER_OF_WORKERS=#{ENV['NUMBER_OF_WORKERS']} 
      export VAGRANT_MACHINE_IP=#{ENV['VAGRANT_MACHINE_IP']}
      echo "[TASK 1] Fix Docker DROP behavior"
      echo "sudo iptables -A FORWARD -j ACCEPT" >> /home/vagrant/.bash_profile

      echo "[TASK 2] Populating /etc/hosts"
      # Add Master node IP address
      echo "172.42.42.100 master master.com" >> /etc/hosts 
      
      # Add Private IP as a local fact 
      # Check if file is already present
      if [ ! -f /etc/ansible/facts.d/ip_address.fact ]
      then 
        echo "[TASK 3] Writing ansible ip_address local fact"
        echo "[worker]" >> /etc/ansible/facts.d/ip_address.fact
        echo "ip = $VAGRANT_MACHINE_IP" >> /etc/ansible/facts.d/ip_address.fact
      fi 

      for((i=1; i<=$NUMBER_OF_WORKERS; i++));
        do
          echo "172.42.42.10$i worker$i worker$i.com" >> /etc/hosts
        done
      SHELL
      
    end
  end

  config.vm.define "master" do |master|
    master.vm.box = "bento/centos-8"
    master.vm.hostname = "master"
    master.vm.network "private_network", ip: "172.42.42.100"
    master.vm.network "forwarded_port", guest: 9000, host: 9000 # Portainer

    # Set CPU and memory 
    master.vm.provider :virtualbox do |vb|
      vb.memory = 2048
      vb.cpus = 2
    end

    master.vm.provision "shell", inline: <<-SHELL
    export NUMBER_OF_WORKERS=#{ENV['NUMBER_OF_WORKERS']} 
    echo "[TASK 1] Initiate the inventory file"
    echo "[all]" >> /home/vagrant/inventory    
    
    echo "[TASK 2] Populate both /etc/hosts and inventory"
    echo "172.42.42.100 master master.com" >> /etc/hosts 
    for((i=1; i<=$NUMBER_OF_WORKERS; i++));
    do
      sudo echo "172.42.42.10$i worker$i worker$i.com" >> /etc/hosts
      echo "worker$i" >> /home/vagrant/inventory
    done
    
     sudo yum install -y ansible jq vim

    # [1] [5]
    sudo -u vagrant /bin/sh << 'VAGRANT_USER'
      export NUMBER_OF_WORKERS=#{ENV['NUMBER_OF_WORKERS']}        
      cd /home/vagrant
      mkdir -v .ssh
      cd /home/vagrant/.ssh/
      ssh-keygen -N "" -f id_rsa # Generate public and private key pairs (id_rsa, id_rsa.pub)

      # Add public key to all managed servers [2]
      for((i=1; i<=$NUMBER_OF_WORKERS; i++));
      do
        sshpass -p "vagrant" ssh-copy-id -o StrictHostKeyChecking=no -i id_rsa.pub vagrant@worker$i
      done

      # Download config file and run the playbook 
      cd /home/vagrant && wget -nc https://raw.githubusercontent.com/theJaxon/K8s-Vagrant/master/AnsiblePort/ansible.cfg
      ansible-playbook /vagrant/K8s.yml

VAGRANT_USER
  SHELL
  end

end
